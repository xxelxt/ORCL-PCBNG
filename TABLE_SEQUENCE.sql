-------------------------------
--- CREATE TABLE & SEQUENCE ---
-------------------------------

--- TABLE ChiNhanh ---

CREATE TABLE ChiNhanh (
    MaCN VARCHAR2(10) PRIMARY KEY,
    TenCN NVARCHAR2(50) NOT NULL,
    DiaChiCN NVARCHAR2(100) NOT NULL,
    SDTCN CHAR(10) NOT NULL CHECK (REGEXP_LIKE(SDTCN, '^[0-9]*$'))
);

CREATE SEQUENCE MaCN_Seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE;

CREATE OR REPLACE TRIGGER ChiNhanh_BI
BEFORE INSERT ON ChiNhanh
FOR EACH ROW
BEGIN
    SELECT 'CN' || TO_CHAR(MaCN_Seq.NEXTVAL) INTO :NEW.MaCN FROM dual;
END;
/

--- TABLE ViTriCV ---

CREATE TABLE ViTriCV (
    MaCV VARCHAR2(10) PRIMARY KEY,
    TenCV NVARCHAR2(50) NOT NULL,
    MoTaCV NVARCHAR2(100)
);

CREATE SEQUENCE MaCV_Seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE;

CREATE OR REPLACE TRIGGER ViTriCV_BI
BEFORE INSERT ON ViTriCV
FOR EACH ROW
BEGIN
    SELECT 'CV' || TO_CHAR(MaCV_Seq.NEXTVAL) INTO :NEW.MaCV FROM dual;
END;
/

--- TABLE BoPhan ---

CREATE TABLE BoPhan (
    MaBP VARCHAR2(10) PRIMARY KEY,
    TenBP NVARCHAR2(50) NOT NULL
);

CREATE SEQUENCE MaBP_Seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE;

CREATE OR REPLACE TRIGGER BoPhan_BI
BEFORE INSERT ON BoPhan
FOR EACH ROW
BEGIN
    SELECT 'BP' || TO_CHAR(MaBP_Seq.NEXTVAL) INTO :NEW.MaBP FROM dual;
END;
/

--- TABLE Luong ---

CREATE TABLE Luong (
    BacLuong NUMBER(2) PRIMARY KEY CHECK (BacLuong > 0),
    HeSoLuong NUMBER NOT NULL CHECK (HeSoLuong > 0),
    LuongCoBan NUMBER NOT NULL CHECK (LuongCoBan > 0),
    PhuCap NUMBER NOT NULL CHECK (PhuCap >= 0)
);

--- TABLE HangTK ---

CREATE TABLE HangTK (
    MaHangTK VARCHAR2(10) PRIMARY KEY,
    TenHangTK NVARCHAR2(30) NOT NULL,
    MucChiTieu NUMBER NOT NULL CHECK (MucChiTieu >= 0),
    MucChietKhau NUMBER(5, 2) NOT NULL CHECK (MucChietKhau >= 0 AND MucChietKhau <= 100)
);

CREATE SEQUENCE MaHangTK_Seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE;

CREATE OR REPLACE TRIGGER HangTK_BI
BEFORE INSERT ON HangTK
FOR EACH ROW
BEGIN
    SELECT 'HTK' || TO_CHAR(MaHangTK_Seq.NEXTVAL) INTO :NEW.MaHangTK FROM dual;
END;
/

--- TABLE NhanVien ---

CREATE TABLE NhanVien (
    MaNV VARCHAR2(10) PRIMARY KEY,
    TenNV NVARCHAR2(50) NOT NULL CHECK (NOT REGEXP_LIKE(TenNV, '[0-9]')),
    GioiTinh NUMBER(1) NOT NULL CHECK (GioiTinh IN (0, 1)),
    NgaySinh DATE NOT NULL,
    SoCCCD CHAR(12) NOT NULL CHECK (REGEXP_LIKE(SoCCCD, '^[0-9]*$')),
    SDTNV CHAR(10) NOT NULL CHECK (REGEXP_LIKE(SDTNV, '^[0-9]*$')),
    EmailNV VARCHAR2(30) NOT NULL,
    DiaChiNV NVARCHAR2(100) NOT NULL,
    AnhNV CLOB,
    NgayVaoLam DATE NOT NULL,
    NgayNghiViec DATE,
    MaCV VARCHAR2(10) REFERENCES ViTriCV(MaCV),
    MaCN VARCHAR2(10) REFERENCES ChiNhanh(MaCN),
    MaBP VARCHAR2(10) REFERENCES BoPhan(MaBP),
    BacLuong NUMBER(2) REFERENCES Luong(BacLuong)
);

CREATE SEQUENCE MaNV_Seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE;

CREATE OR REPLACE TRIGGER NhanVien_BI
BEFORE INSERT ON NhanVien
FOR EACH ROW
BEGIN
    SELECT 'NV' || TO_CHAR(MaNV_Seq.NEXTVAL) INTO :NEW.MaNV FROM dual;
END;
/

--- TABLE KhachHang ---

CREATE TABLE KhachHang (
    TaiKhoan VARCHAR2(30) PRIMARY KEY,
    MatKhau VARCHAR2(30) NOT NULL,
    TenKH NVARCHAR2(50) NOT NULL CHECK (NOT REGEXP_LIKE(TenKH, '[0-9]')),
    GioiTinh NUMBER(1) NOT NULL CHECK (GioiTinh IN (0, 1)),
    NgaySinh DATE NOT NULL,
    SoCCCD CHAR(12) NOT NULL CHECK (REGEXP_LIKE(SoCCCD, '^[0-9]*$')),
    SDTKH CHAR(10) NOT NULL CHECK (REGEXP_LIKE(SDTKH, '^[0-9]*$')),
    EmailKH VARCHAR2(30) NOT NULL,
    DiaChiKH NVARCHAR2(100) NOT NULL,
    TTGioiHan NUMBER(1) NOT NULL CHECK (TTGioiHan IN (0, 1)),
    SoTienDangCo NUMBER NOT NULL CHECK (SoTienDangCo >= 0),
    SoTienChiTieu NUMBER NOT NULL CHECK (SoTienChiTieu >= 0),
    AnhKH CLOB,
    MaHangTK VARCHAR2(10) REFERENCES HangTK(MaHangTK)
);

CREATE SEQUENCE MaKH_Seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE;

CREATE OR REPLACE TRIGGER KhachHang_BI
BEFORE INSERT ON KhachHang
FOR EACH ROW
BEGIN
    SELECT 'tk' || TO_CHAR(MaKH_Seq.NEXTVAL) INTO :NEW.TaiKhoan FROM dual;
END;
/

--- TABLE GDNapTien ---

CREATE TABLE GDNapTien (
    MaGD VARCHAR2(10) PRIMARY KEY,
    TaiKhoan VARCHAR2(30) NOT NULL,
    MaNV VARCHAR2(10) NOT NULL,
    SoTienNap NUMBER NOT NULL CHECK (SoTienNap >= 0),
    FOREIGN KEY (TaiKhoan) REFERENCES KhachHang(TaiKhoan),
    FOREIGN KEY (MaNV) REFERENCES NhanVien(MaNV)
);

CREATE SEQUENCE MaGD_Seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE;

CREATE OR REPLACE TRIGGER GDNapTien_BI
BEFORE INSERT ON GDNapTien
FOR EACH ROW
BEGIN
    SELECT 'GD' || TO_CHAR(MaGD_Seq.NEXTVAL) INTO :NEW.MaGD FROM dual;
END;
/

--- TABLE Zone ---

CREATE TABLE Zone (
    LoaiZone VARCHAR2(10) PRIMARY KEY,
    TenZone VARCHAR2(30) NOT NULL,
    MucGiaTheoGio NUMBER NOT NULL CHECK (MucGiaTheoGio >= 0),
    TSKT CLOB NOT NULL
);

--- TABLE TTMay ---

CREATE TABLE TTMay (
    MaMay VARCHAR2(10),
    MaCN VARCHAR2(10) REFERENCES ChiNhanh(MaCN),
    LoaiZone VARCHAR2(10) REFERENCES Zone(LoaiZone),
    TTHoatDong NUMBER(1) NOT NULL CHECK (TTHoatDong IN (0, 1)),
    TTBan NUMBER(1) NOT NULL CHECK (TTBan IN (0, 1)),
    PRIMARY KEY (MaMay, MaCN)
);

--- TABLE PLDVAnUong ---

CREATE TABLE PLDVAnUong (
    MaPL VARCHAR2(10) PRIMARY KEY,
    TenPL NVARCHAR2(50) NOT NULL
);

CREATE SEQUENCE MaPLDV_Seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE;

CREATE OR REPLACE TRIGGER PLDVAnUong_BI
BEFORE INSERT ON PLDVAnUong
FOR EACH ROW
BEGIN
    SELECT 'PL' || TO_CHAR(MaPLDV_Seq.NEXTVAL) INTO :NEW.MaPL FROM dual;
END;
/

--- TABLE DVAnUong ---

CREATE TABLE DVAnUong (
    MaMon VARCHAR2(10) PRIMARY KEY,
    TenMon NVARCHAR2(50) NOT NULL,
    GiaMon NUMBER NOT NULL CHECK (GiaMon >= 0),
    AnhMon CLOB,
    MaPL VARCHAR2(10) NOT NULL REFERENCES PLDVAnUong(MaPL)
);

CREATE SEQUENCE MaDVAU_Seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE;

CREATE OR REPLACE TRIGGER DVAnUong_BI
BEFORE INSERT ON DVAnUong
FOR EACH ROW
BEGIN
    SELECT 'DVAU' || TO_CHAR(MaDVAU_Seq.NEXTVAL) INTO :NEW.MaMon FROM dual;
END;
/

--- TABLE DVKhac ---

CREATE TABLE DVKhac (
    MaDV VARCHAR2(10) PRIMARY KEY,
    TenDV NVARCHAR2(50) NOT NULL,
    MucGiaTheoGio NUMBER NOT NULL CHECK (MucGiaTheoGio >= 0)
);

CREATE SEQUENCE MaDVK_Seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE;

CREATE OR REPLACE TRIGGER DVKhac_BI
BEFORE INSERT ON DVKhac
FOR EACH ROW
BEGIN
    SELECT 'DVK' || TO_CHAR(MaDVK_Seq.NEXTVAL) INTO :NEW.MaDV FROM dual;
END;
/

--- TABLE HoaDon ---

CREATE TABLE HoaDon (
    MaHD VARCHAR2(10) PRIMARY KEY,
    TaiKhoan VARCHAR2(30) REFERENCES KhachHang(TaiKhoan),
    MaNV VARCHAR2(10) REFERENCES NhanVien(MaNV),
    NgayXuat DATE NOT NULL,
    TongTien NUMBER NOT NULL CHECK (TongTien >= 0),
    GhiChu CLOB
);

CREATE SEQUENCE MaHD_Seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE;

CREATE OR REPLACE TRIGGER HoaDon_BI
BEFORE INSERT ON HoaDon
FOR EACH ROW
BEGIN
    SELECT 'HD' || TO_CHAR(MaHD_Seq.NEXTVAL) INTO :NEW.MaHD FROM dual;
END;
/

--- TABLE CTHoaDonInternet ---

CREATE TABLE CTHoaDonInternet (
    MaHD VARCHAR2(10),
    MaMay VARCHAR2(10),
    MaCN VARCHAR2(10),
    SoGio NUMBER NOT NULL CHECK (SoGio > 0),
    DonGiaTheoGio NUMBER NOT NULL CHECK (DonGiaTheoGio >= 0),
    ChietKhau NUMBER(5, 2) NOT NULL CHECK (ChietKhau >= 0 AND ChietKhau <= 100),
    PRIMARY KEY (MaHD, MaMay, MaCN),
    FOREIGN KEY (MaHD) REFERENCES HoaDon(MaHD),
    FOREIGN KEY (MaMay, MaCN) REFERENCES TTMay(MaMay, MaCN)
);

--- TABLE CTHoaDonDVKhac ---

CREATE TABLE CTHoaDonDVKhac (
    MaHD VARCHAR2(10),
    MaDV VARCHAR2(10),
    SoGio NUMBER NOT NULL CHECK (SoGio > 0),
    DonGiaTheoGio NUMBER NOT NULL CHECK (DonGiaTheoGio >= 0),
    ChietKhau NUMBER(5, 2) NOT NULL CHECK (ChietKhau >= 0 AND ChietKhau <= 100),
    PRIMARY KEY (MaHD, MaDV),
    FOREIGN KEY (MaHD) REFERENCES HoaDon(MaHD),
    FOREIGN KEY (MaDV) REFERENCES DVKhac(MaDV)
);

--- TABLE CTHoaDonAnUong ---

CREATE TABLE CTHoaDonAnUong (
    MaHD VARCHAR2(10),
    MaMon VARCHAR2(10),
    SoLuong NUMBER NOT NULL CHECK (SoLuong > 0),
    DonGia NUMBER NOT NULL CHECK (DonGia >= 0),
    ChietKhau NUMBER(5, 2) NOT NULL CHECK (ChietKhau >= 0 AND ChietKhau <= 100),
    PRIMARY KEY (MaHD, MaMon),
    FOREIGN KEY (MaHD) REFERENCES HoaDon(MaHD),
    FOREIGN KEY (MaMon) REFERENCES DVAnUong(MaMon)
);

--- TABLE ThietBi ---
CREATE TABLE ThietBi (
    MaTB VARCHAR2(10) PRIMARY KEY,
    TenTB NVARCHAR2(50) NOT NULL
);

CREATE SEQUENCE MaTB_Seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE;


CREATE OR REPLACE TRIGGER ThietBi_BI
BEFORE INSERT ON ThietBi
FOR EACH ROW
BEGIN
    SELECT 'TB' || TO_CHAR(MaTB_Seq.NEXTVAL) INTO :NEW.MaTB FROM dual;
END;
/

--- TABLE BaoTri ---

CREATE TABLE BaoTri (
    MaBT VARCHAR2(10) PRIMARY KEY,
    MaCN VARCHAR2(10),
    MaMay VARCHAR2(10),
    MaTB VARCHAR2(10) REFERENCES ThietBi(MaTB),
    TinhTrang CLOB NOT NULL,
    GhiChu CLOB,
    TTSua NUMBER(1) NOT NULL CHECK (TTSua IN (0, 1)),
    FOREIGN KEY (MaCN, MaMay) REFERENCES TTMay(MaCN, MaMay)
);

CREATE SEQUENCE MaBT_Seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE;

CREATE OR REPLACE TRIGGER BaoTri_BI
BEFORE INSERT ON BaoTri
FOR EACH ROW
BEGIN
    SELECT 'BT' || TO_CHAR(MaBT_Seq.NEXTVAL) INTO :NEW.MaBT FROM dual;
END;
/

--- TABLE SuKien ---

CREATE TABLE SuKien (
    MaSK VARCHAR2(10) PRIMARY KEY,
    TenSK NVARCHAR2(100) NOT NULL,
    MoTaSK CLOB,
    NgayBD DATE NOT NULL,
    NgayKT DATE NOT NULL,
    TTToChuc NUMBER(1) NOT NULL CHECK (TTToChuc IN (0, 1)),
    MaCN VARCHAR2(10) REFERENCES ChiNhanh(MaCN),
    CONSTRAINT Check_NgayKT_NgayBD CHECK (NgayKT >= NgayBD)
);

CREATE SEQUENCE MaSK_Seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE;

CREATE OR REPLACE TRIGGER SuKien_BI
BEFORE INSERT ON SuKien
FOR EACH ROW
BEGIN
    SELECT 'SK' || TO_CHAR(MaSK_Seq.NEXTVAL) INTO :NEW.MaSK FROM dual;
END;
/

--- TABLE ThamGiaSuKien ---

CREATE TABLE ThamGiaSuKien (
    MaSK VARCHAR2(10),
    TaiKhoan VARCHAR2(30),
    UuDai CLOB,
    PRIMARY KEY (MaSK, TaiKhoan),
    FOREIGN KEY (MaSK) REFERENCES SuKien(MaSK),
    FOREIGN KEY (TaiKhoan) REFERENCES KhachHang(TaiKhoan)
);

--- TABLE DatCho ---

CREATE TABLE DatCho (
    MaDC VARCHAR2(10) PRIMARY KEY,
    TaiKhoan VARCHAR2(30) REFERENCES KhachHang(TaiKhoan),
    MaNV VARCHAR2(10) REFERENCES NhanVien(MaNV),
    NgayDat DATE NOT NULL,
    NgayDen DATE NOT NULL,
    YeuCau CLOB NOT NULL,
    CONSTRAINT Check_NgayDen_NgayDat CHECK (NgayDen >= NgayDat)
);

CREATE SEQUENCE MaDC_Seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE;

CREATE OR REPLACE TRIGGER DatCho_BI
BEFORE INSERT ON DatCho
FOR EACH ROW
BEGIN
    SELECT 'DC' || TO_CHAR(MaDC_Seq.NEXTVAL) INTO :NEW.MaDC FROM dual;
END;
/

--- DROP SEQUENCE & TABLE ---

DROP SEQUENCE MaCN_Seq;
DROP SEQUENCE MaCV_Seq;
DROP SEQUENCE MaBP_Seq;
DROP SEQUENCE MaHangTK_Seq;
DROP SEQUENCE MaNV_Seq;
DROP SEQUENCE MaKH_Seq;
DROP SEQUENCE MaGD_Seq;
DROP SEQUENCE MaPLDV_Seq;
DROP SEQUENCE MaDVAU_Seq;
DROP SEQUENCE MaDVK_Seq;
DROP SEQUENCE MaHD_Seq;
DROP SEQUENCE MaTB_Seq;
DROP SEQUENCE MaBT_Seq;
DROP SEQUENCE MaSK_Seq;
DROP SEQUENCE MaDC_Seq;

DROP TABLE DatCho;
DROP TABLE ThamGiaSuKien;
DROP TABLE SuKien;
DROP TABLE BaoTri;
DROP TABLE ThietBi;
DROP TABLE CTHoaDonAnUong;
DROP TABLE CTHoaDonDVKhac;
DROP TABLE CTHoaDonInternet;
DROP TABLE HoaDon;
DROP TABLE DVAnUong;
DROP TABLE DVKhac;
DROP TABLE PLDVAnUong;
DROP TABLE TTMay;
DROP TABLE Zone;
DROP TABLE GDNapTien;
DROP TABLE KhachHang;
DROP TABLE NhanVien;
DROP TABLE HangTK;
DROP TABLE Luong;
DROP TABLE BoPhan;
DROP TABLE ViTriCV;
DROP TABLE ChiNhanh;